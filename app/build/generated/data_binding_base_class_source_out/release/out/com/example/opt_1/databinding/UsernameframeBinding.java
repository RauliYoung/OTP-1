// Generated by view binder compiler. Do not edit!
package com.example.opt_1.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.FrameLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.opt_1.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class UsernameframeBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final TextView sumResult;

  @NonNull
  public final TextView sumResult2;

  @NonNull
  public final TextView userNameNameInList;

  @NonNull
  public final FrameLayout usernameFrameID;

  private UsernameframeBinding(@NonNull ConstraintLayout rootView, @NonNull TextView sumResult,
      @NonNull TextView sumResult2, @NonNull TextView userNameNameInList,
      @NonNull FrameLayout usernameFrameID) {
    this.rootView = rootView;
    this.sumResult = sumResult;
    this.sumResult2 = sumResult2;
    this.userNameNameInList = userNameNameInList;
    this.usernameFrameID = usernameFrameID;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static UsernameframeBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static UsernameframeBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.usernameframe, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static UsernameframeBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.sumResult;
      TextView sumResult = ViewBindings.findChildViewById(rootView, id);
      if (sumResult == null) {
        break missingId;
      }

      id = R.id.sumResult2;
      TextView sumResult2 = ViewBindings.findChildViewById(rootView, id);
      if (sumResult2 == null) {
        break missingId;
      }

      id = R.id.userNameNameInList;
      TextView userNameNameInList = ViewBindings.findChildViewById(rootView, id);
      if (userNameNameInList == null) {
        break missingId;
      }

      id = R.id.usernameFrameID;
      FrameLayout usernameFrameID = ViewBindings.findChildViewById(rootView, id);
      if (usernameFrameID == null) {
        break missingId;
      }

      return new UsernameframeBinding((ConstraintLayout) rootView, sumResult, sumResult2,
          userNameNameInList, usernameFrameID);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
