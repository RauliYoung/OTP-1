// Generated by view binder compiler. Do not edit!
package com.example.opt_1.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.Chronometer;
import android.widget.LinearLayout;
import android.widget.ScrollView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.opt_1.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentActivityBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final ScrollView ActivityDataHistoryList;

  @NonNull
  public final LinearLayout ActivityListForData;

  @NonNull
  public final TextView activityDataDuration;

  @NonNull
  public final TextView activityDataLength;

  @NonNull
  public final TextView activityDataSpeed;

  @NonNull
  public final Button activityStartActivityButton;

  @NonNull
  public final Button activityStopActivityButton;

  @NonNull
  public final Chronometer activityTimer;

  @NonNull
  public final TextView distanceTravelled;

  private FragmentActivityBinding(@NonNull ConstraintLayout rootView,
      @NonNull ScrollView ActivityDataHistoryList, @NonNull LinearLayout ActivityListForData,
      @NonNull TextView activityDataDuration, @NonNull TextView activityDataLength,
      @NonNull TextView activityDataSpeed, @NonNull Button activityStartActivityButton,
      @NonNull Button activityStopActivityButton, @NonNull Chronometer activityTimer,
      @NonNull TextView distanceTravelled) {
    this.rootView = rootView;
    this.ActivityDataHistoryList = ActivityDataHistoryList;
    this.ActivityListForData = ActivityListForData;
    this.activityDataDuration = activityDataDuration;
    this.activityDataLength = activityDataLength;
    this.activityDataSpeed = activityDataSpeed;
    this.activityStartActivityButton = activityStartActivityButton;
    this.activityStopActivityButton = activityStopActivityButton;
    this.activityTimer = activityTimer;
    this.distanceTravelled = distanceTravelled;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentActivityBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentActivityBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_activity, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentActivityBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.ActivityDataHistoryList;
      ScrollView ActivityDataHistoryList = ViewBindings.findChildViewById(rootView, id);
      if (ActivityDataHistoryList == null) {
        break missingId;
      }

      id = R.id.ActivityListForData;
      LinearLayout ActivityListForData = ViewBindings.findChildViewById(rootView, id);
      if (ActivityListForData == null) {
        break missingId;
      }

      id = R.id.activity_data_duration;
      TextView activityDataDuration = ViewBindings.findChildViewById(rootView, id);
      if (activityDataDuration == null) {
        break missingId;
      }

      id = R.id.activity_data_length;
      TextView activityDataLength = ViewBindings.findChildViewById(rootView, id);
      if (activityDataLength == null) {
        break missingId;
      }

      id = R.id.activity_data_speed;
      TextView activityDataSpeed = ViewBindings.findChildViewById(rootView, id);
      if (activityDataSpeed == null) {
        break missingId;
      }

      id = R.id.activity_StartActivityButton;
      Button activityStartActivityButton = ViewBindings.findChildViewById(rootView, id);
      if (activityStartActivityButton == null) {
        break missingId;
      }

      id = R.id.activity_StopActivityButton;
      Button activityStopActivityButton = ViewBindings.findChildViewById(rootView, id);
      if (activityStopActivityButton == null) {
        break missingId;
      }

      id = R.id.activity_timer;
      Chronometer activityTimer = ViewBindings.findChildViewById(rootView, id);
      if (activityTimer == null) {
        break missingId;
      }

      id = R.id.distance_travelled;
      TextView distanceTravelled = ViewBindings.findChildViewById(rootView, id);
      if (distanceTravelled == null) {
        break missingId;
      }

      return new FragmentActivityBinding((ConstraintLayout) rootView, ActivityDataHistoryList,
          ActivityListForData, activityDataDuration, activityDataLength, activityDataSpeed,
          activityStartActivityButton, activityStopActivityButton, activityTimer,
          distanceTravelled);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
